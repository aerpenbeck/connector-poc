/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.AbstractModificationAction;
import com.example.connectorpoc.ft.model.ModifyPickLineItemActionAllOf;
import com.example.connectorpoc.ft.model.PickLineItemStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ModifyPickLineItemAction
 */
@JsonPropertyOrder({
  ModifyPickLineItemAction.JSON_PROPERTY_ACTION,
  ModifyPickLineItemAction.JSON_PROPERTY_PICKED,
  ModifyPickLineItemAction.JSON_PROPERTY_STATUS,
  ModifyPickLineItemAction.JSON_PROPERTY_ID
})
@JsonTypeName("ModifyPickLineItemAction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "action", visible = true)

public class ModifyPickLineItemAction extends AbstractModificationAction {
  /**
   * Use value &#39;ModifyPickLineItem&#39;, because you want to modify a pick line item
   */
  public enum ActionEnum {
    MODIFYPICKLINEITEM("ModifyPickLineItem");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION = "action";
  protected ActionEnum action;

  public static final String JSON_PROPERTY_PICKED = "picked";
  private Long picked;

  public static final String JSON_PROPERTY_STATUS = "status";
  private PickLineItemStatus status;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;


  public ModifyPickLineItemAction action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * Use value &#39;ModifyPickLineItem&#39;, because you want to modify a pick line item
   * @return action
  **/
  @ApiModelProperty(required = true, value = "Use value 'ModifyPickLineItem', because you want to modify a pick line item")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ActionEnum getAction() {
    return action;
  }


  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public ModifyPickLineItemAction picked(Long picked) {
    
    this.picked = picked;
    return this;
  }

   /**
   * The amount of articles that were picked for this pickline.
   * minimum: 0
   * @return picked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20", value = "The amount of articles that were picked for this pickline.")
  @JsonProperty(JSON_PROPERTY_PICKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPicked() {
    return picked;
  }


  public void setPicked(Long picked) {
    this.picked = picked;
  }


  public ModifyPickLineItemAction status(PickLineItemStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PickLineItemStatus getStatus() {
    return status;
  }


  public void setStatus(PickLineItemStatus status) {
    this.status = status;
  }


  public ModifyPickLineItemAction id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
   * @return id
  **/
  @ApiModelProperty(example = "climk4dcQFiPdA5ULuhS", required = true, value = "The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyPickLineItemAction modifyPickLineItemAction = (ModifyPickLineItemAction) o;
    return Objects.equals(this.action, modifyPickLineItemAction.action) &&
        Objects.equals(this.picked, modifyPickLineItemAction.picked) &&
        Objects.equals(this.status, modifyPickLineItemAction.status) &&
        Objects.equals(this.id, modifyPickLineItemAction.id) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, picked, status, id, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyPickLineItemAction {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    picked: ").append(toIndentedString(picked)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


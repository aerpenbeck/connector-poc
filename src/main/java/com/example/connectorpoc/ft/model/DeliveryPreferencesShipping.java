/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.CarrierKey;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DeliveryPreferencesShipping
 */
@JsonPropertyOrder({
  DeliveryPreferencesShipping.JSON_PROPERTY_SERVICETYPE,
  DeliveryPreferencesShipping.JSON_PROPERTY_PREFERRED_CARRIERS
})
@JsonTypeName("DeliveryPreferences_shipping")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
public class DeliveryPreferencesShipping {
  /**
   * BEST_EFFORT: the parcel will reach the recipient as fast as possible without giving any guarantees. More types will be added in the future.
   */
  public enum ServicetypeEnum {
    BEST_EFFORT("BEST_EFFORT");

    private String value;

    ServicetypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServicetypeEnum fromValue(String value) {
      for (ServicetypeEnum b : ServicetypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICETYPE = "servicetype";
  private ServicetypeEnum servicetype;

  public static final String JSON_PROPERTY_PREFERRED_CARRIERS = "preferredCarriers";
  private List<CarrierKey> preferredCarriers = null;


  public DeliveryPreferencesShipping servicetype(ServicetypeEnum servicetype) {
    
    this.servicetype = servicetype;
    return this;
  }

   /**
   * BEST_EFFORT: the parcel will reach the recipient as fast as possible without giving any guarantees. More types will be added in the future.
   * @return servicetype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BEST_EFFORT: the parcel will reach the recipient as fast as possible without giving any guarantees. More types will be added in the future.")
  @JsonProperty(JSON_PROPERTY_SERVICETYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServicetypeEnum getServicetype() {
    return servicetype;
  }


  public void setServicetype(ServicetypeEnum servicetype) {
    this.servicetype = servicetype;
  }


  public DeliveryPreferencesShipping preferredCarriers(List<CarrierKey> preferredCarriers) {
    
    this.preferredCarriers = preferredCarriers;
    return this;
  }

  public DeliveryPreferencesShipping addPreferredCarriersItem(CarrierKey preferredCarriersItem) {
    if (this.preferredCarriers == null) {
      this.preferredCarriers = new ArrayList<>();
    }
    this.preferredCarriers.add(preferredCarriersItem);
    return this;
  }

   /**
   * Get preferredCarriers
   * @return preferredCarriers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREFERRED_CARRIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CarrierKey> getPreferredCarriers() {
    return preferredCarriers;
  }


  public void setPreferredCarriers(List<CarrierKey> preferredCarriers) {
    this.preferredCarriers = preferredCarriers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliveryPreferencesShipping deliveryPreferencesShipping = (DeliveryPreferencesShipping) o;
    return Objects.equals(this.servicetype, deliveryPreferencesShipping.servicetype) &&
        Objects.equals(this.preferredCarriers, deliveryPreferencesShipping.preferredCarriers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(servicetype, preferredCarriers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliveryPreferencesShipping {\n");
    sb.append("    servicetype: ").append(toIndentedString(servicetype)).append("\n");
    sb.append("    preferredCarriers: ").append(toIndentedString(preferredCarriers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


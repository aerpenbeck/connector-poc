/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.AbstractModificationAction;
import com.example.connectorpoc.ft.model.ModifyShipmentActionAllOf;
import com.example.connectorpoc.ft.model.ShipmentStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ModifyShipmentAction
 */
@JsonPropertyOrder({
  ModifyShipmentAction.JSON_PROPERTY_ACTION,
  ModifyShipmentAction.JSON_PROPERTY_STATUS
})
@JsonTypeName("ModifyShipmentAction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "action", visible = true)

public class ModifyShipmentAction extends AbstractModificationAction {
  /**
   * Use value &#39;ModifyShipment&#39;, because you want to modify a shipment
   */
  public enum ActionEnum {
    MODIFYSHIPMENT("ModifyShipment");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION = "action";
  protected ActionEnum action;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ShipmentStatus status;


  public ModifyShipmentAction action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * Use value &#39;ModifyShipment&#39;, because you want to modify a shipment
   * @return action
  **/
  @ApiModelProperty(required = true, value = "Use value 'ModifyShipment', because you want to modify a shipment")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ActionEnum getAction() {
    return action;
  }


  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public ModifyShipmentAction status(ShipmentStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentStatus getStatus() {
    return status;
  }


  public void setStatus(ShipmentStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyShipmentAction modifyShipmentAction = (ModifyShipmentAction) o;
    return Objects.equals(this.action, modifyShipmentAction.action) &&
        Objects.equals(this.status, modifyShipmentAction.status) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, status, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyShipmentAction {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


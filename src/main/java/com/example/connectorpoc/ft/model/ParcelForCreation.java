/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.CarrierReference;
import com.example.connectorpoc.ft.model.ConsumerAddress;
import com.example.connectorpoc.ft.model.FacilityAddress;
import com.example.connectorpoc.ft.model.ParcelForCreationDimensions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ParcelForCreation
 */
@JsonPropertyOrder({
  ParcelForCreation.JSON_PROPERTY_SHIPMENT_REF,
  ParcelForCreation.JSON_PROPERTY_CARRIER,
  ParcelForCreation.JSON_PROPERTY_RECIPIENT,
  ParcelForCreation.JSON_PROPERTY_DIMENSIONS,
  ParcelForCreation.JSON_PROPERTY_SENDER
})
@JsonTypeName("ParcelForCreation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
public class ParcelForCreation {
  public static final String JSON_PROPERTY_SHIPMENT_REF = "shipmentRef";
  private String shipmentRef;

  public static final String JSON_PROPERTY_CARRIER = "carrier";
  private CarrierReference carrier;

  public static final String JSON_PROPERTY_RECIPIENT = "recipient";
  private ConsumerAddress recipient = null;

  public static final String JSON_PROPERTY_DIMENSIONS = "dimensions";
  private ParcelForCreationDimensions dimensions;

  public static final String JSON_PROPERTY_SENDER = "sender";
  private FacilityAddress sender = null;


  public ParcelForCreation shipmentRef(String shipmentRef) {
    
    this.shipmentRef = shipmentRef;
    return this;
  }

   /**
   * The reference to the shipment for which the parcel is ordered
   * @return shipmentRef
  **/
  @ApiModelProperty(example = "Esb20gpHBL94X5NdMp3C", required = true, value = "The reference to the shipment for which the parcel is ordered")
  @JsonProperty(JSON_PROPERTY_SHIPMENT_REF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShipmentRef() {
    return shipmentRef;
  }


  public void setShipmentRef(String shipmentRef) {
    this.shipmentRef = shipmentRef;
  }


  public ParcelForCreation carrier(CarrierReference carrier) {
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CARRIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CarrierReference getCarrier() {
    return carrier;
  }


  public void setCarrier(CarrierReference carrier) {
    this.carrier = carrier;
  }


  public ParcelForCreation recipient(ConsumerAddress recipient) {
    
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConsumerAddress getRecipient() {
    return recipient;
  }


  public void setRecipient(ConsumerAddress recipient) {
    this.recipient = recipient;
  }


  public ParcelForCreation dimensions(ParcelForCreationDimensions dimensions) {
    
    this.dimensions = dimensions;
    return this;
  }

   /**
   * Get dimensions
   * @return dimensions
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ParcelForCreationDimensions getDimensions() {
    return dimensions;
  }


  public void setDimensions(ParcelForCreationDimensions dimensions) {
    this.dimensions = dimensions;
  }


  public ParcelForCreation sender(FacilityAddress sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FacilityAddress getSender() {
    return sender;
  }


  public void setSender(FacilityAddress sender) {
    this.sender = sender;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParcelForCreation parcelForCreation = (ParcelForCreation) o;
    return Objects.equals(this.shipmentRef, parcelForCreation.shipmentRef) &&
        Objects.equals(this.carrier, parcelForCreation.carrier) &&
        Objects.equals(this.recipient, parcelForCreation.recipient) &&
        Objects.equals(this.dimensions, parcelForCreation.dimensions) &&
        Objects.equals(this.sender, parcelForCreation.sender);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shipmentRef, carrier, recipient, dimensions, sender);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParcelForCreation {\n");
    sb.append("    shipmentRef: ").append(toIndentedString(shipmentRef)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


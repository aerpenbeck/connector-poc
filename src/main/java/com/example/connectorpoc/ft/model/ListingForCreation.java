/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.ListingAttributeItem;
import com.example.connectorpoc.ft.model.StockInformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ListingForCreation
 */
@JsonPropertyOrder({
  ListingForCreation.JSON_PROPERTY_TENANT_ARTICLE_ID,
  ListingForCreation.JSON_PROPERTY_PRICE,
  ListingForCreation.JSON_PROPERTY_STOCKINFORMATION,
  ListingForCreation.JSON_PROPERTY_TITLE,
  ListingForCreation.JSON_PROPERTY_IMAGE_URL,
  ListingForCreation.JSON_PROPERTY_ATTRIBUTES
})
@JsonTypeName("ListingForCreation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
public class ListingForCreation {
  public static final String JSON_PROPERTY_TENANT_ARTICLE_ID = "tenantArticleId";
  private String tenantArticleId;

  public static final String JSON_PROPERTY_PRICE = "price";
  private BigDecimal price;

  public static final String JSON_PROPERTY_STOCKINFORMATION = "stockinformation";
  private StockInformation stockinformation;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_IMAGE_URL = "imageUrl";
  private String imageUrl;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private List<ListingAttributeItem> attributes = null;


  public ListingForCreation tenantArticleId(String tenantArticleId) {
    
    this.tenantArticleId = tenantArticleId;
    return this;
  }

   /**
   * This is a reference to an article Id
   * @return tenantArticleId
  **/
  @ApiModelProperty(example = "4711", required = true, value = "This is a reference to an article Id")
  @JsonProperty(JSON_PROPERTY_TENANT_ARTICLE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTenantArticleId() {
    return tenantArticleId;
  }


  public void setTenantArticleId(String tenantArticleId) {
    this.tenantArticleId = tenantArticleId;
  }


  public ListingForCreation price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1200.0", value = "")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ListingForCreation stockinformation(StockInformation stockinformation) {
    
    this.stockinformation = stockinformation;
    return this;
  }

   /**
   * Get stockinformation
   * @return stockinformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STOCKINFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StockInformation getStockinformation() {
    return stockinformation;
  }


  public void setStockinformation(StockInformation stockinformation) {
    this.stockinformation = stockinformation;
  }


  public ListingForCreation title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * a title describing the article
   * @return title
  **/
  @ApiModelProperty(example = "Adidas Superstar", required = true, value = "a title describing the article")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ListingForCreation imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * A web link to a picture of this article. Please make sure that no authentication is required to fetch the image!
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A web link to a picture of this article. Please make sure that no authentication is required to fetch the image!")
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public ListingForCreation attributes(List<ListingAttributeItem> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ListingForCreation addAttributesItem(ListingAttributeItem attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ListingAttributeItem> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<ListingAttributeItem> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingForCreation listingForCreation = (ListingForCreation) o;
    return Objects.equals(this.tenantArticleId, listingForCreation.tenantArticleId) &&
        Objects.equals(this.price, listingForCreation.price) &&
        Objects.equals(this.stockinformation, listingForCreation.stockinformation) &&
        Objects.equals(this.title, listingForCreation.title) &&
        Objects.equals(this.imageUrl, listingForCreation.imageUrl) &&
        Objects.equals(this.attributes, listingForCreation.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantArticleId, price, stockinformation, title, imageUrl, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingForCreation {\n");
    sb.append("    tenantArticleId: ").append(toIndentedString(tenantArticleId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    stockinformation: ").append(toIndentedString(stockinformation)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


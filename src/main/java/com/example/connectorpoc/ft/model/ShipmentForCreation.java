/*
 * fulfillmenttools API for tenant %%PROJECT_ID%%
 * This is the fulfillmenttools API for tenant %%PROJECT_ID%%
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.connectorpoc.ft.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.connectorpoc.ft.model.DeliveryInformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A Shipment can be created providing a pickjob reference.
 */
@ApiModel(description = "A Shipment can be created providing a pickjob reference.")
@JsonPropertyOrder({
  ShipmentForCreation.JSON_PROPERTY_PICK_JOB_REF,
  ShipmentForCreation.JSON_PROPERTY_DELIVERY_INFORMATION
})
@JsonTypeName("ShipmentForCreation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-13T17:37:48.618828+01:00[Europe/Berlin]")
public class ShipmentForCreation {
  public static final String JSON_PROPERTY_PICK_JOB_REF = "pickJobRef";
  private String pickJobRef;

  public static final String JSON_PROPERTY_DELIVERY_INFORMATION = "deliveryInformation";
  private DeliveryInformation deliveryInformation;


  public ShipmentForCreation pickJobRef(String pickJobRef) {
    
    this.pickJobRef = pickJobRef;
    return this;
  }

   /**
   * The reference to the pickjob for which the shipment is assigned to
   * @return pickJobRef
  **/
  @ApiModelProperty(example = "ca525716-7208-4a63-a2a6-11274eb37f67-0", required = true, value = "The reference to the pickjob for which the shipment is assigned to")
  @JsonProperty(JSON_PROPERTY_PICK_JOB_REF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPickJobRef() {
    return pickJobRef;
  }


  public void setPickJobRef(String pickJobRef) {
    this.pickJobRef = pickJobRef;
  }


  public ShipmentForCreation deliveryInformation(DeliveryInformation deliveryInformation) {
    
    this.deliveryInformation = deliveryInformation;
    return this;
  }

   /**
   * Get deliveryInformation
   * @return deliveryInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeliveryInformation getDeliveryInformation() {
    return deliveryInformation;
  }


  public void setDeliveryInformation(DeliveryInformation deliveryInformation) {
    this.deliveryInformation = deliveryInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentForCreation shipmentForCreation = (ShipmentForCreation) o;
    return Objects.equals(this.pickJobRef, shipmentForCreation.pickJobRef) &&
        Objects.equals(this.deliveryInformation, shipmentForCreation.deliveryInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pickJobRef, deliveryInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentForCreation {\n");
    sb.append("    pickJobRef: ").append(toIndentedString(pickJobRef)).append("\n");
    sb.append("    deliveryInformation: ").append(toIndentedString(deliveryInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

